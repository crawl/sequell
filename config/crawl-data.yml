# YAML config for !listgame and friends.
#

memory-use-limit-megabytes: 768

termcast:
  server: termcast.shalott.org
  client-protocols:
    - telnet
    - https

##
# Maps query context names to table names. Thus !lg will query the `logrecord`
# table while !lm will query the `milestone` table. Note that each table
# name must also have an associated `name`-fields-with-type key.
query-contexts:
  lg:
    table: logrecord
  lm:
    table: milestone
    autojoin-context: lg

##
# Field name -> SQL name mappings; some field names have to be mapped to
# different names to avoid SQL keyword collisions.
sql-field-names:
  name: pname
  char: charabbrev
  str: sstr
  dex: sdex
  int: sint
  start: tstart
  end: tend
  time: ttime
  map: mapname
  offset: file_offset

##
# game types recognized by !lg and friends, mapped to the table name prefix.
# For instance, Crawl games will query `logrecord` and `milestone`, Sprint
# games will query `spr_logrecord` and `spr_milestone` and so on.
game-type-prefixes:
  crawl: ''
  sprint: spr_
  zotdef: zot_
  nostalgia: nostalgia_

game-type-tags:
  sprint: [spr, sprint]
  zotdef: [zd, zotdef]
  nostalgia: nostalgia

default-game-type: crawl

generic_panlord: a pandemonium lord

orcs:
  - Agrik
  - Alork
  - Arbolt
  - Argrim
  - Arkwar
  - Berold
  - Bladwarg
  - Blodwig
  - Boderik
  - Bogdan
  - Boldo
  - Bolgrim
  - Borgk
  - Borgoth
  - Borgun
  - Boruk
  - Brandogh
  - Brunolf
  - Dorog
  - Garbold
  - Gorbash
  - Gorg
  - Gorm
  - Grimold
  - Harm
  - Hawl
  - Herok
  - Hilgar
  - Jorge
  - Judas
  - Koronagh
  - Learuk
  - Marbork
  - Margrim
  - Milork
  - Morguth
  - Morun
  - Murdo
  - Norbak
  - Nordag
  - Ognian
  - Ogrik
  - Okrist
  - Olfik
  - Olfrun
  - Oreg
  - Orgrim
  - Orik
  - Orkrul
  - Orkwin
  - Ortolf
  - Oruk
  - Rocco
  - Syrus
  - Thorok
  - Ugbert
  - Ugrim
  - Wardok
  - Wargath
  - Wargrak
  - Warrok
  - Worak
  - Wulfoc
  - Zorug

uniques:
  - Adolf
  - Agnes
  - Aizul
  - Amaemon
  - Antaeus
  - Arachne
  - Asmodeus
  - Asterion
  - Azrael
  - Bai Suzhen
  - Blork
  - Blork the orc
  - Blorkula the Orcula
  - Boris
  - Cerebov
  - Chuck
  - Crazy Yiuf
  - Dispater
  - Dissolution
  - Donald
  - Dowan
  - Duane
  - Duvessa
  - Edmund
  - the Enchantress
  - Ereshkigal
  - Erica
  - Erolcha
  - Eustachio
  - Fannar
  - Frances
  - Francis
  - Frederick
  - Gastronok
  - Geryon
  - Gloorx Vloq
  - Grinder
  - Grum
  - Grunn
  - Harold
  - Ignacio
  - Ijyb
  - Ilsuiw
  - the Iron Giant
  - Jessica
  - Jorgrun
  - Jory
  - Joseph
  - Josephine
  - Josephina
  - Jozef
  - Khufu
  - Kirke
  - Lamia
  - the Lernaean hydra
  - Lodul
  - Lom Lobon
  - Louise
  - Maggie
  - Mara
  - Margery
  - Maud
  - Maurice
  - Menkaure
  - Mennas
  - Michael
  - Mlioglotl
  - Mnoleg
  - Murray
  - Natasha
  - Nellie
  - Nergalle
  - Nessos
  - Nikola
  - Norbert
  - Norris
  - Parghit
  - Pargi
  - Pan
  - Pikel
  - Polyphemus
  - Prince Ribbit
  - Psyche
  - Purgy
  - Robin
  - Roxanne
  - the Royal Jelly
  - Rupert
  - Saint Roka
  - Satan Claus
  - the Serpent of Hell
  - Sigmund
  - Snorg
  - Sojobo
  - Sonja
  - Terence
  - Terpsichore
  - Tiamat
  - Urug
  - Vashnia
  - Vv
  - Wayne
  - Wiglaf
  - Xak'krixis
  - Xtahua
  - Zenata

# Used to handle fields that contain both monster killers and oddball
# edge cases.
special-killer-phrases:
  - you
  - unwield
  - miscasting

# Only used by !apt at the moment.
skills:
  - Fighting
  - Short Blades
  - Long Blades
  - Axes
  - Maces & Flails
  - Polearms
  - Staves
  - Ranged Weapons
  - Throwing
  - Armour
  - Dodging
  - Stealth
  - Shields
  - Unarmed Combat
  - Spellcasting
  - Conjurations
  - Hexes
  - Summonings
  - Necromancy
  - Forgecraft
  - Translocations
  - Alchemy
  - Fire Magic
  - Ice Magic
  - Air Magic
  - Earth Magic
  - Invocations
  - Evocations
  - Shapeshifting
  - Experience
  - HP
  - MP

skill-abbreviations:
  'ranged weapons': Ranged
  throwing: Throw
  dodging: Dodge
  spellcasting: Splcast
  conjurations: Conj
  summonings: Summ
  necromancy: Nec
  translocations: Tloc
  alchemy: Alch
  invocations: Inv
  evocations: Evo
  experience: Exp
  shapeshifting: Shape
  hp: HP
  mp: MP
  'unarmed combat': UC

skill-expansions:
  flails: maces & flails
  uc: unarmed combat
  armor: armour
  spell: spellcasting
  necro: necromancy
  invo: invocations
  shape: shapeshifting
  alch: alchemy
  tloc: translocations

# Must include all variations of branch names here. Canonical names may be
# generated by place-fixups. Suffix the branch name with : to indicate that
# it has a depth. Suffix with [:] to indicate that this branch may or may
# not have a depth.
branches:
  - 'Abyss[:]'
  - Arena
  - Bailey
  - Bazaar
  - Blade
  - Bzr
  - 'Coc:'
  - Crucible
  - 'Crypt:'
  - 'D:'
  - 'Depths:'
  - Desolation
  - 'Dis:'
  - 'Elf:'
  - 'Forest:'
  - Gauntlet
  - 'Geh:'
  - Hell
  - 'Hive:'
  - Ice
  - IceCv
  - Lab
  - 'Lair:'
  - Minitom
  - Necropolis
  - 'Orc:'
  - Ossuary
  - Pan
  - Sewer
  - 'Shoal:'
  - 'Shoals:'
  - 'Slime:'
  - 'Snake:'
  - 'Spider:'
  - 'Swamp:'
  - 'Tar:'
  - Temple
  - 'Tomb:'
  - Trove
  - 'Vault:'
  - 'Vaults:'
  - Volcano
  - WizLab
  - 'Zig:'
  - 'Ziggurat:'
  - 'Zot:'

god:
  ash: Ashenzari
  beo: Beogh
  che: Cheibriados
  dit: Dithmenos
  ely: Elyvilon
  fed: Fedhas
  goz: Gozag
  ign: Ignis
  jiy: Jiyva
  kik: Kikubaaqudgha
  lug: Lugonu
  mak: Makhleb
  oka: Okawaru
  qaz: Qazlal
  sif: Sif Muna
  tro: Trog
  tso: The Shining One
  veh: Vehumet
  xom: Xom
  yre: Yredelemnul
  zin: Zin
  nem: Nemelex Xobeh
  ru: Ru
  hep: Hepliaklqana
  usk: Uskayaw
  wu: Wu Jian

god-aliases:
  feawn: Fedhas
  dithmengos: Dithmenos
  ukayaw: Uskayaw

# * - dead species
species:
  At: Armataur
  Ba: Barachi
  Ce: Centaur*
  Co: Coglin
  DD: Deep Dwarf*
  DE: Deep Elf
  Dg: Demigod
  Dj: Djinni
  Dr: Draconian
  Ds: Demonspawn
  El: Elf*
  Fe: Felid
  Fo: Formicid
  GE: Grey Elf*
  Gh: Ghoul*
  Gm: Gnome*
  Gn: Gnoll
  Gr: [Gargoyle, Grotesk]
  HD: Hill Dwarf*
  HE: High Elf*
  HO: Hill Orc*
  Ha: Halfling*
  Hu: Human
  Ke: Kenku*
  Ko: Kobold
  LO: Lava Orc*
  MD: Mountain Dwarf
  Me: Meteoran*
  Mf: Merfolk
  Mi: Minotaur
  Mu: Mummy
  My: Mayflytaur*
  Na: Naga
  OM: Ogre-Mage*
  Og: Ogre*
# Note: `On' must be quoted here because otherwise it's interpreted as `true'
# in yaml 1.1 and earlier.
  'On': Oni
  Op: Octopode
  Pa: Palentonga*
  Po: Poltergeist
  Pl: Plutonian*
  Re: Revenant
  SE: Sludge Elf*
  Sp: Spriggan
  Te: Tengu
  Tr: Troll
  VS: Vine Stalker
  Vp: Vampire*

species-flavours:
  draconian:
    - ''
    - red
    - white
    - green
    - yellow
    - grey
    - black
    - purple
    - mottled
    - pale

genus-species:
  draconian: draconian
  elven:
    - high elf
    - deep elf
    - sludge elf
  dwarven:
    - mountain dwarf
    - deep dwarf
  orcish:
    - hill orc
    - lava orc
  ogre: ogre

species-enum-map-override: {}

# * - dead class
classes:
  AE: Air Elementalist
  AK: Abyssal Knight*
  Al: Alchemist
  AM: Arcane Marksman*
  Ar: Artificer
  As: Assassin*
  Be: Berserker
  Br: Brigand
  CA: Cinder Acolyte
  CK: Chaos Knight
  Cj: Conjurer
  Cr: Crusader*
  DK: Death Knight
  De: Delver
  EE: Earth Elementalist
  En: Enchanter
  FE: Fire Elementalist
  Fi: Fighter
  Fw: Forgewright
  Gl: Gladiator
  HW: Hedge Wizard
  He: Healer*
  Hs: Hexslinger
  Hu: Hunter
  IE: Ice Elementalist
  Jr: Jester*
  Mo: Monk
  Ne: Necromancer
  Pa: Paladin*
  Pr: Priest*
  Re: Reaver
  Sh: Shapeshifter
  Sk: Skald
  St: Stalker*
  Su: Summoner
  Th: Thief*
  Tm: Transmuter*
  VM: Venom Mage*
  Wn: Wanderer
  Wr: Warper
  Wz: Wizard*

column-aliases:
  maxsk: maxskills
  fifsk: fifteenskills
  stat: status
  role: cls
  class: cls
  job: cls
  species: race
  sp: race
  r: race
  ktype: ktyp
  score: sc
  turns: turn
  skill: sk
  ch: char
  kmap: killermap
  c: cls
  cl: xl
  clev: xl
  type: verb
  gid: game_key
  game_id: game_key

place-fixups:
  '^shoals?\b(.*)': 'Shoals$1'
  '^dep(?:th)?\b(.*)': 'Depths$1'
  '^vaults?\b(.*)': 'Vaults$1'
  '^v\b(.*)': 'Vaults$1'
  '^ice$': 'IceCv'
  '^labyrinth$': 'Lab'

prefix-field-fixups:
  ktyp:
    win: winning
    won: winning
    acid: acid
    trap: trap
    drown: water
    leav: leaving
    left: leaving
    quit: quitting
    pois: pois
    cloud: cloud
    star: starvation
    mon: mon
    beam: beam
    lava: lava
    wizmode: wizmode

# cdist and count are both count distinct
aggregate-functions:
  count_all:
    type: '*'
    expr: "COUNT(*)"
    return: I
    count: true
  cdist:
    type: '*'
    expr: "COUNT(DISTINCT %s)"
    return: I
    count: true
  count:
    type: '*'
    expr: "COUNT(DISTINCT %s)"
    return: I
    id: cdist
    count: true
  avg:
    types:
      - type: ETD
        return: '*'
      - type: I
        return: F
    preserve-unit: true
  median:
    type: I
    return: '*'
    preserve-unit: true
  max: '*'
  min: '*'
  sum:
    type: I
    return: I
    preserve-unit: true
  std:
    expr: "STDDEV(%s)"
    type: I
    return: F
  variance:
    type: I
    return: F

value-functions:
  now:
    types:
      - type: []
        return: D
    expr: "(current_timestamp at time zone 'utc')"
  abs:
    type: I
    return: '*'
  int:
    type: '*'
    return: 'I'
    expr: "CAST(%s AS BIGINT)"
    summarisable: true
  interval:
    type: 'S'
    return: 'ETD'
    expr: "CAST(%s AS INTERVAL)"
    summarisable: true
  seconds_interval:
    type: ET
    return: ETD
    expr: "(%s * INTERVAL '1s')"
    summarisable: true
  interval_seconds:
    type: 'ETD'
    return: ET
    expr: "EXTRACT(EPOCH FROM %s)"
    summarisable: true
  length:
    type: 'S'
    return: 'I'
    expr: "LENGTH(%s)"
    summarisable: true
  log:
    type: 'F'
    return: 'F'
    expr: "LOG(%s)"
    summarisable: true
  nhour:
    type: 'D'
    return: 'I'
    expr: "date_part('hour', %s)"
    summarisable: true
  nmin:
    type: 'D'
    return: 'I'
    expr: "date_part('minute', %s)"
    summarisable: true
  ndayofmonth:
    type: 'D'
    return: 'I'
    expr: "date_part('day', %s)"
    summarisable: true
  nmonth:
    type: 'D'
    return: 'I'
    expr: "date_part('month', %s)"
    summarisable: true
  nweekofyear:
    type: 'D'
    return: 'I'
    expr: "date_part('week', %s)"
    summarisable: true
  ndayofweek:
    type: 'D'
    return: 'I'
    expr: "extract(dow from %s)"
    summarisable: true
  day:
    type: 'D'
    expr: "date_trunc('day', %s)"
    return: 'D'
    summarisable: true
    display-format: '%Y%m%d'
  week:
    type: 'D'
    expr: "date_trunc('week', %s)"
    summarisable: true
    display-format: '%Y%U'
  month:
    type: 'D'
    expr: "date_trunc('month', %s)"
    summarisable: true
    display-format: '%Y%m'
  year:
    type: 'D'
    expr: "date_trunc('year', %s)"
    summarisable: true
    display-format: '%Y'
  vault:
    type: 'S'
    expr: "split_part(%s, '; ', 1)"
    summarisable: true
  part:
    types:
      - type: ['S', 'S', 'I']
        result: 'S'
    expr: "split_part(%s, :2, :3)"
  subvault:
    type: 'S'
    expr: "regexp_replace(%s, '^.*?; ', '')"
    summarisable: true
  regexp_replace:
    types:
      - type: ['S', 'S', 'S']
        result: 'S'
    expr: "regexp_replace(:1, :2, :3)"
  trunc:
    types:
      - type: ['F', 'I']
        result: 'I'
    expr: "(trunc(:1 / :2) * :2)"
  size:
    type: 'S'
    summarisable: true
    return: 'I'
    expr: "case when %s = '' then 0 else length(regexp_replace(%s, '[^,]+', '', 'g')) + 1 end"

query-tables:
  - logrecord
  - milestone

milestone-indexes:
  - [verb, noun]

# Explicit lookup tables for fields that can reasonably share a lookup
# table.
#
# Note: lookup tables are shared across game types and across
# logrecord/milestone. Any field annotated ^ that does not have an
# explicit lookup table gets an implicit lookup table with the same
# name as the field.
lookup-tables:
  file:
    fields: [file]
    generated-fields:
      - offsetIB*&
  version:
    fields: [v]
    generated-fields:
      - vnumIH?^
  savercsversion:
    fields: [vsavrv]
    generated-fields:
      - vsavrvnumIH?^
  savever:
    fields: [vsav]
    generated-fields:
      - vsavnumIH?^
  cversion:
    fields: [cv]
    generated-fields:
      - cvnumIH?^
  vlong:
    fields: [vlong]
    generated-fields:
      - vlongnumIH?^
  killer: [killerS, ckillerS, ikillerS, cikillerS]
  banisher: [banisherS, cbanisherS]
  map: [map, killermap]
  kaux: [kaux, ckaux]
  msg: [tmsgS, vmsgS]
  maxskills: [maxskills, fifteenskills]

type-categories:
  ETD: ETD
  ET: F
  VER: S
  MAP: S
  I: F
  F: F
  S: S
  '': S
  D: D
  '!': '!'

type-promotions:
  - [ETD, F]

sticky-types:
  - ETD

column-substitutes:
  ordered:
    v: vnum
    vlong: vlongnum
    cv: cvnum
    vsavrv: vsavrvnum
    vsav: vsavnum

field-types:
  sql:
    TEXT: citext
    MAP: citext
    PK: serial
    S: text
    I: int
    REF: int
    IB: bigint
    ET: bigint
    VER: citext
    IH: numeric(18)
    D: timestamp
    '!': boolean
  defaults:
    I: 0
    ET: 0
    IB: 0
    IH: 0
    '!': "false"
  lookup:
    S: cast(%s as citext)

##
# Field type suffixes:
# - I (integer)
# - S (String, case sensitive)
# - IB (big integer)
# - IH (huge - 18 digits)
# - D (date+time)
#
# - ? (indexed)
# - * (not summarisable)
# - % (autoincrementing primary key)
# - ^ (foreign key into a table)
# - ! (negatable, aka boolean)
# - + (multi-valued)
# - & (external book-keeping data, not derived from xlog fields)
logrecord-fields-with-type:
  - idIB%*&
  - offsetIB*&
  - game_key?^
  - hash?^[uuid]
  - file^
  - alpha!
  - src?^
  - explbr^
  - vVER?^
  - cvVER?^
  - vlongVER?^
  - vsavVER?^
  - vsavrvVER?^
  - lv^
  - scIB?
  - nameS?^
  - race?^
  - crace?^
  - cls?^
  - charS?^
  - xlI?
  - sk?^
  - sklevI?
  - title?^
  - ktyp?^
  - killerS?^
  - ckillerS?^
  - ikillerS?^
  - cikillerS?^
  - kpath^
  - kmod^
  - kaux?^
  - ckaux?^
  - place?^
  - br^
  - lvlI
  - absdepthI
  - ltyp^
  - hpI?
  - mhpI?
  - mmhpI
  - mpI
  - mmpI
  - bmmpI
  - damI
  - sdamI
  - tdamI
  - strI
  - intI
  - dexI
  - god?^
  - pietyI
  - penI
  - wiz!
  - startD*?
  - endD*?
  - durET?
  - turnI?
  - uruneI?
  - nruneI?
  - tmsgS^
  - vmsgS^
  - rstart*?
  - rend*?
  - ntvI
  - mapMAP?^
  - killermapMAP?^
  - mapdesc^
  - tiles!
  - goldI
  - goldfoundI
  - goldspentI
  - zigscompletedI
  - zigdeepestI
  - scrollsusedI
  - potionsusedI
  - killsI
  - acI
  - evI
  - shI
  - autI
  - maxskills^+
  - fifteenskills^+
  - status^+
  - banisherS?^
  - cbanisherS?^

milestone-fields-with-type:
  - idI%
  - game_key?^
  - hash?^[uuid]
  - offsetIB*
  - file^
  - alpha!
  - src?^
  - explbr^
  - vVER?^
  - cvVER?^
  - vlongVER?^
  - vsavVER?^
  - vsavrvVER?^
  - nameS?^
  - race?^
  - crace?^
  - cls?^
  - charS?^
  - xlI?
  - sk?^
  - sklevI
  - title?^
  - place?^
  - br^
  - lvlI
  - absdepthI
  - ltyp^
  - hpI
  - mhpI
  - mmhpI
  - mpI
  - mmpI
  - bmmpI
  - strI
  - intI
  - dexI
  - god?^
  - wiz!
  - durET
  - turnI?
  - uruneI?
  - nruneI?
  - timeD*?
  - rtime*?
  - startD*?
  - rstart*?
  - verb?^
  - nounS?^
  - milestone^
  - ntvI
  - oplace^
  - tiles!
  - goldI
  - goldfoundI
  - goldspentI
  - zigscompletedI
  - zigdeepestI
  - scrollsusedI
  - potionsusedI
  - killsI
  - acI
  - evI
  - shI
  - autI
  - maxskills^+
  - fifteenskills^+
  - status^+
  - banisherS?^
  - cbanisherS?^

milestone-verb-mappings:
  unique: uniq
  enter: br.enter
  branch-finale: br.end

# field input transforms are applied in sequence to xlog values on load
field-input-transforms: &inputtransforms
  - sk:
      # String replacements must match the full value:
      string-replace:
        - [Translocation, Translocations]
        - [Transmutation, Transmutations]
        - [Transmigration, Transmutations]
  - explbr:
      regexp-replace:
        - ["(?i)^head$", ""]
        - ["^crawl-.*", ""]
        - ["^heads.*", ""]
  - god:
      string-replace:
        - [Ieoh Jian, Wu Jian]
  - race:
      string-replace:
        - [Barachian, Barachi]
        - [Bultungin, Gnoll]
  - cls:
      string-replace:
        - [Assassin, Brigand]
  - cls:
      regexp-replace:
        - ["^Wizard", "Hedge Wizard"]
  - cls:
      string-replace:
        - ["Arcane Marksman", "Hexslinger"]
  - crace:
      source: race
      regexp-replace:
        - [".*(Draconian)", "$1"]
        - [Grotesk, Gargoyle]
        - [Kenku, Tengu]
  - char:
      if-match:
        - field: race
          equal: Gnome
      regexp-replace:
        - ['^Gn', 'Gm']
  - char:
      if-match:
        - field: cls
          equal: Brigand
      regexp-replace:
        - ['As$', 'Br']
  - char:
      if-match:
        - field: crace
          equal: Gnoll
      regexp-replace:
        - ['^Bu', 'Gn']
  - char:
      if-match:
        - field: cls
          equal: Wizard
      regexp-replace:
        - ['Wz$', 'HW']
  - char:
      if-match:
        - field: cls
          equal: "Arcane Marksman"
      regexp-replace:
        - ['AM$', 'Hs']


field-transforms:
  crace:
    ke: Tengu
    kenku: Tengu
    grotesk: Gargoyle
  cls:
    as: Brigand
    assassin: Brigand
    wz: Hedge Wizard
    wizard: Hedge Wizard
    am: Hexslinger
    "arcane marksman": Hexslinger
  ktyp:
    poison: pois
    drown: water
    won: winning
    win: winning
    left: leaving
    leave: leaving
    quit: quitting
  status:
    berserk: berserking
    haste: hasted
    para: paralysed
    slow: slowed
    pois: ~poisoned
    regen: regenerating
    conf: confused
    noregen: non-regenerating
    inv: invisible
    defl: deflect missiles
    tel: about to teleport
  sk: &sk
    fi: Fighting
    nec: Necromancy
    forge: Forgecraft
    evo: Evocations
    sho: Short Blades
    sbl: Short Blades
    ear: Earth Magic
    thr: Throwing
    dod: Dodging
    inv: invocations
    enc: Enchantments
    bow: Bows
    poi: Poison Magic
    t&d: Traps & Doors
    stab: Stabbing
    stav: Staves
    div: Divinations
    sli: Slings
    cross: Crossbows
    cbow: Crossbows
    ranged: Ranged Weapons
    hex: Hexes
    cha: Charms
    tloc: Translocations
    tmut: Transmutations
    tmig: Transmutations
    mace: Maces & Flails
    flai: Maces & Flails
    ice: Ice Magic
    fire: Fire Magic
    conj: Conjurations
    cj: Conjurations
    spc: Spellcasting
    spell: Spellcasting
    arm: Armour
    pole: Polearms
    pla: Polearms
    unar: Unarmed Combat
    summ: Summonings
    lbl: Long Blades
    long: Long Blades
    sh: Shields
    air: Air Magic
    shape: Shapeshifting
    alch: Alchemy

  maxskills:
    <<: *sk


##
# Fake query fields that are transformed into a real query field by code in
# query_synthetic.rb
fake-fields-with-type:
  - when*
  - game*

milestone-types:
  - abyss.enter
  - abyss.exit
  - rune
  - orb
  - orb.destroy
  - ghost
  - ghost.ban
  - ghost.pac
  - uniq
  - uniq.ban
  - uniq.pac
  - uniq.ens
  - uniq.slime
  - br.enter
  - br.end
  - br.mid
  - br.exit
  - god.mollify
  - god.renounce
  - god.worship
  - god.ecumenical
  - god.maxpiety
  - shaft
  - crash
  - monstrous
  - zig
  - zig.enter
  - zig.exit
  - death
  - begin
  - sacrifice
  - ancestor.class
  - ancestor.special
  - gem.found
  - gem.lost
  - mark

milestone-aliases:
  god.abandon: god.renounce
  god.wor: god.worship
  unique: uniq
  unique.ban: uniq.ban
  unique.banish: uniq.ban
  uniq.banish: uniq.ban
  unique.pac: uniq.pac
  uniq.pacify: uniq.pac
  unique.pacify: uniq.pac
  unique.ens: uniq.ens
  unique.enslave: uniq.ens
  uniq.enslave: uniq.ens
  unique.slime: uniq.slime
  unique.slimify: uniq.slime
  uniq.slimify: uniq.slime
  began: begin

tournament-prefixes:
  - t
  - tourney
  - tournament

tournament-data:
  default-tourney: '2024b'
  crawl:
    '2008':
      version: "0.4"
      time: [20080801, 20080901]
    '2009':
      version: "0.5"
      time: [20090801, 20090901]
    '2010':
      version: "0.7"
      time: [20100801, 20100901]
    '2011a':
      version: "0.8"
      time: [20110514, 20110530]
    '2011b':
      version: ["0.9", "0.9-a"]
      time: [20110813, 20110829]
    '2012a':
      version: "0.10"
      # Account for CDO clock being 14s slow
      time: [20120224235946, 20120312]
    '2012b':
      version: "0.11"
      time: [20121020, 20121105]
    '2013a':
      version: "0.12"
      time: [20130511, 20130527]
    '2013b':
      version: "0.13"
      time: [2013101120, 2013102720]
    '2014a':
      version: "0.14"
      time: [2014041120, 2014042720]
    '2014b':
      version: "0.15"
      time: [2014082920, 2014091420]
    '2015a':
      version: ["0.16", "0.16-a"]
      time: [2015031320, 2015032920]
    '2015b':
      version: ["0.17", "0.17-a"]
      time: [2015110620, 2015112220]
    '2016a':
      version: ["0.18"]
      time: [2016050620, 2016052220]
    '2016b':
      version: ["0.19", "0.19-a"]
      time: [2016110420, 2016112020]
    '2017a':
      version: ["0.20", "0.20-a"]
      time: [2017052620, 2017061120]
    '2018a':
      version: ["0.21", "0.21-a"]
      time: [2018010520, 2018012120]
    '2018b':
      version: ["0.22", "0.22-a"]
      time: [2018081020, 2018082620]
    '2019a':
      version: ["0.23", "0.23-a"]
      time: [2019020820, 2019022420]
    '2019b':
      version: ["0.24", "0.24-a"]
      time: [2019102520, 2019111020]
    '2020a':
      version: ["0.25", "0.25-a"]
      time: [2020061220, 2020062820]
      filter: file!="cwz/soup/trunk/milestones|cwz/soup/trunk/logfile"
    '2021a':
      version: ["0.26", "0.26-a"]
      time: [2021010820, 2021012420]
      filter: file!="cwz/soup/trunk/milestones|cwz/soup/trunk/logfile"
    '2021b':
      version: ["0.27", "0.27-a"]
      time: [2021073020, 2021081520]
      filter: file!="cwz/soup/trunk/milestones|cwz/soup/trunk/logfile"
    '2022a':
      version: ["0.28", "0.28-a"]
      time: [2022020420, 2022022020]
      filter: file!="cwz/soup/trunk/milestones|cwz/soup/trunk/logfile"
    '2022b':
      version: ["0.29", "0.29-a"]
      time: [2022082620, 2022091120]
      filter: file!="cwz/soup/trunk/milestones|cwz/soup/trunk/logfile"
    '2023a':
      version: ["0.30", "0.30-a"]
      time: [2023050520, 2023052120]
      filter: file!="cwz/soup/trunk/milestones|cwz/soup/trunk/logfile"
    '2024a':
      version: ["0.31", "0.31-a"]
      time: [2024011920, 2024020420]
    '2024b':
      version: ["0.32", "0.32-a"]
      time: [2024083020, 2024091520]


  sprint:
    '2010':
      version: "0.7"
      time: [20100815, 20100901]
      map: dungeon sprint mu

wtf-lookup:
  greensnark: The completely awesome variety of snark.
  tgwi: The Good Wife (according to Wikipedia)
  cang: cang
  hangedman: http://fc09.deviantart.net/fs71/i/2010/127/f/0/The_Hanged_Man_by_Luktarig.jpg
